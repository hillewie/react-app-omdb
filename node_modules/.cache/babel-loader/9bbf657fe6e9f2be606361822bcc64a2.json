{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hille\\\\OneDrive\\\\Skrivbord\\\\react-app\\\\src\\\\components\\\\MovieAPI.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport MovieList from './MovieList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [movies] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const FetchMovies = async () => {\n    _s();\n\n    const url = `http://www.omdbapi.com/?s=star wars&apikey=df23ef2`;\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log(data.JSON);\n    setSearchValue(data.Search);\n    useEffect(() => {\n      FetchMovies();\n    }, []);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MovieList, {\n        movies: this.movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  };\n\n  _s(FetchMovies, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n}; // export class MovieAPI extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             userInput: '',\n//             movies: []\n//         };\n//     }\n//     fetchMovies = async () => {\n//         try {\n//             const url = `http://www.omdbapi.com/?s=Harry&apikey=df23ef2`;\n//             const response = await fetch(url);\n//             const data = await response.json();\n//             console.log(data);\n//             const fetchUrl = [\n//                 ...this\n//             ]\n//             this.setState({\n//                 movies: data\n//             })\n//         } catch (error) {\n//             console.log(error);\n//         }\n//     }\n//     searchMovie = (newSearch) => {\n//         const searchResult = [\n//             ...this.state.movies,\n//             newSearch\n//         ]\n//         this.setState({\n//             movies: searchResult\n//         })\n//     }\n//   render() {\n//       const { movies } = this.state; \n//     return (\n//         <div>\n//             <Form \n//                  searchMovie={this.searchMovie}\n//             />\n//             <MovieList movies={this.movies} />\n// <section>\n// {movies.map((movie) => (\n//         <article key={movies.id}>\n//         <h2>{movies.Title}</h2>\n//          </article>\n// ))}\n// </section>\n//             <h1>Movies</h1>\n//             <button onClick={this.fetchMovies}>Movies</button>\n//         </div>\n//         )\n//     }\n// }\n\n\n_s2(App, \"fsmmerkBhGi13SuMFug2nh5Ffgw=\");\n\n_c = App;\nexport default FetchMovies;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/hille/OneDrive/Skrivbord/react-app/src/components/MovieAPI.js"],"names":["React","useState","useEffect","MovieList","App","movies","searchValue","setSearchValue","FetchMovies","url","response","fetch","data","json","console","log","JSON","Search"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAAA;;AACV,QAAM,CAACC,MAAD,IAAaJ,QAAQ,CAAC,EAAD,CAA3B;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAA+BN,QAAQ,CAAC,EAAD,CAA7C;;AAEA,QAAMO,WAAW,GAAG,YAAY;AAAA;;AAChC,UAAMC,GAAG,GAAI,oDAAb;AAEA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,IAAjB;AACAT,IAAAA,cAAc,CAACK,IAAI,CAACK,MAAN,CAAd;AAEAf,IAAAA,SAAS,CAAC,MAAM;AACZM,MAAAA,WAAW;AACd,KAFQ,EAEN,EAFM,CAAT;AAIA,wBACI;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,MAAM,EAAE,KAAKH;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH,GAnBG;;AAJU,KAIJG,WAJI;AAyBjB,CAzBD,C,CA2BA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAGA;AACA;AACA;AACA;;;IApGMJ,G;;KAAAA,G;AAqGN,eAAeI,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport MovieList from './MovieList';\r\n\r\nconst App = () => {\r\n        const [movies, ] = useState([]);\r\n        const [searchValue, setSearchValue]= useState(\"\");\r\n\r\n        const FetchMovies = async () => {\r\n        const url = `http://www.omdbapi.com/?s=star wars&apikey=df23ef2`;\r\n\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n\r\n        console.log(data.JSON)\r\n        setSearchValue(data.Search);\r\n\r\n        useEffect(() => {\r\n            FetchMovies();\r\n        }, []);\r\n\r\n        return (\r\n            <div>\r\n                <MovieList movies={this.movies} />\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n  \r\n// export class MovieAPI extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n    \r\n//         this.state = {\r\n//             userInput: '',\r\n//             movies: []\r\n//         };\r\n//     }\r\n        \r\n//     fetchMovies = async () => {\r\n//         try {\r\n//             const url = `http://www.omdbapi.com/?s=Harry&apikey=df23ef2`;\r\n            \r\n//             const response = await fetch(url);\r\n//             const data = await response.json();\r\n//             console.log(data);\r\n\r\n//             const fetchUrl = [\r\n//                 ...this\r\n//             ]\r\n\r\n//             this.setState({\r\n//                 movies: data\r\n//             })\r\n            \r\n            \r\n//         } catch (error) {\r\n//             console.log(error);\r\n//         }\r\n//     }\r\n\r\n\r\n//     searchMovie = (newSearch) => {\r\n//         const searchResult = [\r\n//             ...this.state.movies,\r\n//             newSearch\r\n//         ]\r\n\r\n//         this.setState({\r\n//             movies: searchResult\r\n//         })\r\n//     }\r\n\r\n//   render() {\r\n//       const { movies } = this.state; \r\n      \r\n//     return (\r\n//         <div>\r\n//             <Form \r\n//                  searchMovie={this.searchMovie}\r\n//             />\r\n\r\n//             <MovieList movies={this.movies} />\r\n\r\n// <section>\r\n\r\n// {movies.map((movie) => (\r\n//         <article key={movies.id}>\r\n//         <h2>{movies.Title}</h2>\r\n//          </article>\r\n// ))}\r\n// </section>\r\n       \r\n\r\n            \r\n//             <h1>Movies</h1>\r\n//             <button onClick={this.fetchMovies}>Movies</button>\r\n            \r\n        \r\n//         </div>\r\n//         )\r\n//     }\r\n// }\r\nexport default FetchMovies \r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}