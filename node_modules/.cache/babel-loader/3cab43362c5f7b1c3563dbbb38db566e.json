{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hille\\\\OneDrive\\\\Skrivbord\\\\react-app\\\\src\\\\components\\\\MovieAPI.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Form from './Form';\nimport MovieList from './MovieList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieAPI = () => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n\n  const FetchMovies = async searchValue => {\n    const url = `http://www.omdbapi.com/?s=${searchValue}&apikey=df23ef2`;\n    const response = await fetch(url);\n    const data = await response.json();\n\n    if (data.Search) {\n      setMovies(data.Search);\n    }\n\n    ;\n  };\n\n  useEffect(() => {\n    FetchMovies(searchValue);\n  }, [searchValue]);\n\n  handleSelectedMovie = selectedMovie => {\n    const Movie = [...this.state.movies, selectedMovie];\n    this.setState({\n      movies: Movie\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        searchValue: searchValue,\n        setSearchValue: setSearchValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MovieList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 13\n  }, this);\n};\n\n_s(MovieAPI, \"LtUGjZKwAZxbZ5NfBCI6bWWMIqM=\");\n\n_c = MovieAPI;\nexport default MovieAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieAPI\");","map":{"version":3,"sources":["C:/Users/hille/OneDrive/Skrivbord/react-app/src/components/MovieAPI.js"],"names":["React","useState","useEffect","Form","MovieList","MovieAPI","movies","setMovies","searchValue","setSearchValue","FetchMovies","url","response","fetch","data","json","Search","handleSelectedMovie","selectedMovie","Movie","state","setState"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEI,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAuBN,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAA+BR,QAAQ,CAAC,EAAD,CAA7C;;AAEA,QAAMS,WAAW,GAAG,MAAOF,WAAP,IAAuB;AAC3C,UAAMG,GAAG,GAAI,6BAA4BH,WAAY,iBAArD;AAEA,UAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAGA,QAAID,IAAI,CAACE,MAAT,EAAgB;AACZT,MAAAA,SAAS,CAACO,IAAI,CAACE,MAAN,CAAT;AACH;;AAAA;AACJ,GAVG;;AAYJd,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,WAAW,CAACF,WAAD,CAAX;AACH,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;;AAIAS,EAAAA,mBAAmB,GAAIC,aAAD,IAAmB;AAGrC,UAAMC,KAAK,GAAG,CACV,GAAG,KAAKC,KAAL,CAAWd,MADJ,EAEVY,aAFU,CAAd;AAMA,SAAKG,QAAL,CAAc;AACVf,MAAAA,MAAM,EAAEa;AADE,KAAd;AAGH,GAZD;;AAeA,sBACQ;AAAA,4BACI;AAAA,6BAEI,QAAC,IAAD;AACA,QAAA,WAAW,EAAEX,WADb;AAEA,QAAA,cAAc,EAAEC;AAFhB;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAA,6BACI,QAAC,SAAD;AACA,QAAA,MAAM,EAAEH;AADR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAiBH,CApDG;;GAAMD,Q;;KAAAA,Q;AAsDV,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Form from './Form';\r\nimport MovieList from './MovieList';\r\n\r\n    const MovieAPI = () => {\r\n        const [movies, setMovies ] = useState([]);\r\n        const [searchValue, setSearchValue]= useState('');\r\n\r\n        const FetchMovies = async (searchValue) => {\r\n        const url = `http://www.omdbapi.com/?s=${searchValue}&apikey=df23ef2`;\r\n\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n         \r\n\r\n        if (data.Search){\r\n            setMovies(data.Search); \r\n        };\r\n    } \r\n    \r\n    useEffect(() => {\r\n        FetchMovies(searchValue);\r\n    }, [searchValue]);\r\n \r\n    handleSelectedMovie = (selectedMovie) => {\r\n        \r\n\r\n        const Movie = [\r\n            ...this.state.movies,\r\n            selectedMovie\r\n        ]\r\n\r\n\r\n        this.setState({\r\n            movies: Movie\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n            <div>\r\n                <div>\r\n                    \r\n                    <Form \r\n                    searchValue={searchValue} \r\n                    setSearchValue={setSearchValue}\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    <MovieList \r\n                    movies={movies} \r\n                    />\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default MovieAPI \r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}