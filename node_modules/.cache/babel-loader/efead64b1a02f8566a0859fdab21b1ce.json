{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hille\\\\OneDrive\\\\Skrivbord\\\\react-app\\\\src\\\\components\\\\MovieList.js\";\nimport React from 'react';\nimport Movie from './Movie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MovieList = props => {\n  selectMovie = event => {\n    console.log('Form->handleSubmit()');\n    event.preventDefault();\n    const newTodo = {\n      id: Math.random() * 1000,\n      task: this.state.task,\n      disabled: true,\n      changeBtnLabel: 'Ändra',\n      completed: false\n    };\n    this.props.handleAddTodo(newTodo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-container\",\n        onClick: this.selectMovie,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"poster\",\n          src: movie.Poster,\n          alt: \"movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: movie.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Year:\", movie.Year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Type:\", movie.Type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n};\n\n_c = MovieList;\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"sources":["C:/Users/hille/OneDrive/Skrivbord/react-app/src/components/MovieList.js"],"names":["React","Movie","MovieList","props","selectMovie","event","console","log","preventDefault","newTodo","id","Math","random","task","state","disabled","changeBtnLabel","completed","handleAddTodo","movies","map","movie","Poster","Title","Year","Type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAEzBC,EAAAA,WAAW,GAAIC,KAAD,IAAW;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AAEAF,IAAAA,KAAK,CAACG,cAAN;AACA,UAAMC,OAAO,GAAG;AACZC,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,KAAgB,IADR;AAEZC,MAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWD,IAFL;AAGZE,MAAAA,QAAQ,EAAE,IAHE;AAIZC,MAAAA,cAAc,EAAE,OAJJ;AAKZC,MAAAA,SAAS,EAAE;AALC,KAAhB;AAQA,SAAKd,KAAL,CAAWe,aAAX,CAAyBT,OAAzB;AACH,GAbD;;AAeA,sBACI;AAAA,cACKN,KAAK,CAACgB,MAAN,CAAaC,GAAb,CAAkBC,KAAD,iBACd;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACI;AACA,QAAA,SAAS,EAAC,iBADV;AAEA,QAAA,OAAO,EAAE,KAAKjB,WAFd;AAAA,gCAII;AAAK,UAAA,SAAS,EAAC,QAAf;AAAwB,UAAA,GAAG,EAAEiB,KAAK,CAACC,MAAnC;AAA2C,UAAA,GAAG,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA,oBAAKD,KAAK,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAA,8BAASF,KAAK,CAACG,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAA,8BAASH,KAAK,CAACI,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA,SAGKJ,KAAK,CAACX,EAHX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADH;AADL,mBADJ;AAiBH,CAlCD;;KAAMR,S;AAoCN,eAAeA,SAAf","sourcesContent":["import React from 'react'\r\nimport Movie from './Movie';\r\n\r\nconst MovieList = (props) => {\r\n\r\n    selectMovie = (event) => {\r\n        console.log('Form->handleSubmit()');\r\n        \r\n        event.preventDefault();\r\n        const newTodo = {\r\n            id: Math.random() * 1000, \r\n            task: this.state.task, \r\n            disabled: true, \r\n            changeBtnLabel: 'Ändra',\r\n            completed: false\r\n        }\r\n\r\n        this.props.handleAddTodo(newTodo);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {props.movies.map((movie) => (\r\n                <div className=\"grid-container\">\r\n                    <div \r\n                    className=\"movie-container\" \r\n                    onClick={this.selectMovie}\r\n                    key={movie.id}>\r\n                        <img className=\"poster\" src={movie.Poster} alt='movie'></img>\r\n                        <h4>{movie.Title}</h4>\r\n                        <p>Year:{movie.Year}</p>\r\n                        <p>Type:{movie.Type}</p> \r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </>\r\n    );      \r\n}\r\n\r\nexport default MovieList;\r\n"]},"metadata":{},"sourceType":"module"}